<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.example.demo.dao.UserDao">

	<select id="getUserNo" resultType="int">
		select show_users_seq.nextval seq from dual
	</select>
	
	<select id="getAllUsers" resultType="User">
		select
        	A.user_no as no,
        	A.user_name as name,
        	A.user_id as id,
        	A.user_password as password,
        	A.user_birth as birth,
        	A.user_tel as tel,
       		A.user_email as email,
	        A.user_address as address,
	        A.email_receiving_consent as emailReceivingConsent,
	        A.sms_receiving_consent as smsReceivingConsent,
	        A.user_available_point as availablePoint,
	        A.user_created_date as createdDate,
	        B.user_role as role,
	        B.user_able_status as ableStatus,
	        B.user_withdrawal_date as withdrawalDate
      from
         show_users A, show_user_roles B
      where
         B.user_able_status = 'Y'
      and
         A.user_no = B.user_no

	</select>
	
	<!-- 
		User getUserById(String userId)
			- parameterType : string
			- resultType : User
	 -->
	<select id="getUserById" parameterType="string" resultType="User">
		select

        	A.user_no as no,
        	A.user_name as name,
        	A.user_id as id,
        	A.user_password as password,
        	A.user_birth as birth,
        	A.user_tel as tel,
       		A.user_email as email,
	        A.user_address as address,
	        A.email_receiving_consent as emailReceivingConsent,
	        A.sms_receiving_consent as smsReceivingConsent,
	        A.user_available_point as availablePoint,
	        A.user_created_date as createdDate,
	        B.user_role as role,
	        B.user_able_status as ableStatus,
	        B.user_withdrawal_date as withdrawalDate
      from
         show_users A, show_user_roles B
      where
         B.user_able_status = 'Y'
      and
         A.user_no = B.user_no
      and
         A.user_id = #{value}
	</select>
	
	<select id="getUserByNo" parameterType="int" resultType="User">
		select
			user_no					as no,
			user_name				as name,
			user_id					as id,
			user_password			as password,
			user_birth				as birth,
			user_tel				as tel,
			user_email				as email,
			user_address			as address,
			email_receiving_consent	as emailReceivingConsent,
			sms_receiving_consent	as smsReceivingConsent,
			user_available_point 	as availablePoint,
			user_created_date 		as createdDate
		from 
			show_users
		where
			user_no = #{value}
	</select>
	
	<update id="updateUser" parameterType="User">
		update show_users
		set
			user_available_point = #{availablePoint}
		where
			user_no = #{no}
	</update>
	
	<!-- user에 저장 -->
	<insert id="insertUser" parameterType="User">
		insert into show_users
		(user_no, user_name, user_id, user_password, user_birth, user_tel, user_email, user_address, email_receiving_consent, sms_receiving_consent)
		values
		(#{no}, #{name}, #{id}, #{password}, #{birth}, #{tel}, #{email}, #{address}, #{emailReceivingConsent}, #{smsReceivingConsent})
	</insert>
	
	<!-- userRole에 저장 -->
	<insert id="addNewUserRole" parameterType="int">
		insert into show_user_roles
		(user_no)
		values
		(#{userNo})
	</insert>
	
	<insert id="insertUserCouponHistory" parameterType="UserCoupon">
		insert into show_coupon_histories
		(coupon_history_no, coupon_no, user_no)
		values
		(show_coupon_histories_seq.nextval, 1, #{userNo})
	</insert>
	
</mapper>