<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.NoticeDao">
	
	<!-- 검색 조건에 따른 데이터의 총 갯수 -->
	<select id="getTotalCountByCondition" parameterType="map" resultType="int">
		select
			count(*)
		from
			show_notices
		<where>
			<if test="opt != null and keyword != null">
				<choose>
					<when test="opt == 'title'">
						notice_title like '%' || #{keyword} || '%'
					</when>
					<when test="opt == 'content'">
						notice_content like '%' || #{keyword} || '%'
					</when>
				</choose>
			</if>
		</where>
	</select>
	
	<!-- 검색 조건에 따른 데이터의 조회 내역 -->
	<select id="getNoticesByCondition" parameterType="map" resultType="Notice">
		select *
		from (
			select
			<choose>
				<when test="sort == 'date'">
					row_number() over (order by notice_created_date desc) rn,
				</when>
				<when test="sort == 'views'">
					row_number() over (order by notice_views desc) as rn,
				</when>
			</choose>
	            notice_no as no,
				notice_type as type,
				notice_title as title,
				notice_content as content,
				notice_created_date as createdDate,
				notice_views as views
         	from
            	show_notices
            <where>
            	<if test="opt != null and keyword != null">
					<choose>
						<when test="opt == 'title'">
							notice_title like '%' || #{keyword} || '%'
						</when>
						<when test="opt == 'content'">
							notice_content like '%' || #{keyword} || '%'
						</when>
					</choose>
				</if>
            </where>
      		)
      <where>
	      <if test="begin != 0 and end != 0">
	         rn >= #{begin} and rn &lt;= #{end}
	      </if>
      </where>
	</select>
	
	<select id="getAllNotice" resultType="Notice">
		select
			notice_no as no,
			notice_type as type,
			notice_title as title,
			notice_content as content,
			notice_created_date as createdDate,
			notice_views as views
		from
			show_notices
		order by
			notice_no desc
	</select>
	
	<select id="getNoticeByNo" parameterType="int" resultType="Notice">
		select
			notice_no as no,
			notice_type as type,
			notice_title as title,
			notice_content as content,
			notice_created_date as createdDate,
			notice_views as views
		from
			show_notices
		where
			notice_no = #{value}
	</select>
	
	
	<!-- update 컬럼 다 쓰면 좀 그런가? 일단 다 쓰긴 했는데 굳이? -->
	<update id="updateNotice" parameterType="Notice">
		update
			show_notices
		set
			notice_no = #{no},
			notice_type = #{type},
			notice_title = #{title},
			notice_content = #{content},
			notice_created_date = #{createdDate},
			notice_views = #{views}
		where
			notice_no = #{no}
	</update>
	
	<select id="getNoticeHome" resultType="Notice">
		select 
			notice_no as no,
			notice_type as type,
			notice_title as title,
			notice_content as content,
			notice_created_date as createdDate,
			notice_views as views
		from (select * from show_notices order by notice_views desc) where rownum &lt;=5
	</select>
	
</mapper>